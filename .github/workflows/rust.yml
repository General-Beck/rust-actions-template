name:                  Check, Test and Build Suite

on:
  pull_request:
  push:
    branches:
      - master
      - stable
    tags:
      - v*
    paths-ignore:
      - 'README.MD'
jobs:
  build-tests:
    name:              Check
    strategy:
      matrix:
        platform:
          - ubuntu-16.04
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - beta
          - nightly
        compiler:
          - clang
          - gcc
    runs-on:           ${{ matrix.platform }}
    env:
      RUST_BACKTRACE:  full
    steps:
      - name:          Set default compiler
        if:            matrix.compiler == 'clang'
        run:           echo "::set-env name=CC::clang"&&echo "::set-env name=CXX::clang++"
      - name:          Install LLVM for Windows
        if:            matrix.platform == 'windows-latest'  && matrix.compiler == 'clang'
        run:           choco install llvm
      - name:          Checkout sources & submodules
        uses:          actions/checkout@master
        with:
          fetch-depth: 5
          submodules:  recursive
      - name:          Install toolchain
        id: toolchain
        uses:          actions-rs/toolchain@master
        with:
          profile:     minimal
          toolchain:   ${{ matrix.toolchain }}
          components:  clippy, rustfmt
          override:    true
      - name:          Set cache hash
        run: |
         echo ::set-env name=cache_hash::${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ matrix.compiler}}-${{ hashFiles('**/Cargo.lock') }}
         printenv
      #- run: echo ${ env['cache_hash'] }
      - name:          Cache cargo registry
        uses:          actions/cache@master
        with:
          path:        $HOME/.cargo/registry
          key:         cargo-registry-${{ env['cache_hash'] }}
      - name:          Cache cargo index
        uses:          actions/cache@master
        with:
          path:        $HOME/.cargo/git
          key:         cargo-git-$CACHE_HASH
      - name:          Cache cargo build
        uses:          actions/cache@master
        with:
          path:        target
          key:         cargo-target-$CACHE_HASH
      - name:          Cache sccache
        uses:          actions/cache@master
        with:
          path:        "$HOME/sccache"
          key:         sccache-$CACHE_HASH
      - name:          Install & start sccache for ${{ matrix.platform }}
        shell:         pwsh
        run:           pwsh .github/workflows/sccache.ps1 ${{ runner.os}}
      - name:          Sccache statistics
        run:           sccache --show-stats
      - name:          Testing ${{ matrix.platform }}-${{matrix.toolchain}}
        uses:          actions-rs/cargo@master
        with:
          command:     test
          toolchain:   ${{matrix.toolchain}}
          args:        --locked --all --release --verbose
      - name:          Stop sccache
        if:            always()
        run:           sccache --stop-server
